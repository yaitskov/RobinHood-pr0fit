cabal-version: 3.0
name:          robin-hood-profit
version:       0.0.1
synopsis:      Calculate per instrument profit from Robin-Hood activity report
description:   Robin-Hood can generate activity report in CSV format.

homepage:      http://github.com/yaitskov/RobinHood-pr0fit
license:       BSD-3-Clause
author:        Daniil Iaitskov
maintainer:    dyaitskov@gmail.com
copyright:     Daniil Iaitkov 2025
category:      System
build-type:    Simple
bug-reports:   https://github.com/yaitskov/RobinHood-pr0fit/issues
source-repository head
  type:
    git
  location:
    https://github.com/yaitskov/RobinHood-pr0fit.git

library
  exposed-modules:
    Data.RobinHood.Profit
  build-depends:
      attoparsec-monoidal
    , base >=4 && <5
    , bytestring
    , casing
    , containers
    , generic-random
    , mtl
    , process
    , regex-compat
    , relude
    , syb
    , template-haskell
    , text
    , trace-embrace




  hs-source-dirs: src
  default-language: Haskell2010
  ghc-options: -Wall
  default-extensions:
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveDataTypeable
    DeriveGeneric
    FlexibleContexts
    FlexibleInstances
    LambdaCase
    MultiParamTypeClasses
    NoImplicitPrelude
    NoMonomorphismRestriction
    OverloadedStrings
    ImportQualifiedPost
    ScopedTypeVariables
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeOperators
    TypeSynonymInstances

-- test-suite test
--   type: exitcode-stdio-1.0
--   main-is: Driver.hs
--   other-modules:
--     Discovery
--     System.Process.Th.Test.CallSpec
--     System.Process.Th.Test.Prelude
--     System.Process.Th.Test.Th
--     Paths_th_process
--   autogen-modules:
--     Paths_th_process
--   hs-source-dirs:
--     test
--   default-extensions:
--     LambdaCase
--     OverloadedStrings
--     OverloadedLabels
--     BangPatterns
--     BinaryLiterals
--     ConstrainedClassMethods
--     ConstraintKinds
--     DataKinds
--     DeriveDataTypeable
--     DeriveFoldable
--     DeriveFunctor
--     DeriveGeneric
--     DeriveLift
--     DeriveTraversable
--     EmptyCase
--     EmptyDataDeriving
--     ExistentialQuantification
--     ExplicitForAll
--     FlexibleContexts
--     FlexibleInstances
--     GeneralizedNewtypeDeriving
--     HexFloatLiterals
--     InstanceSigs
--     ImportQualifiedPost
--     KindSignatures
--     MultiParamTypeClasses
--     NamedFieldPuns
--     NamedWildCards
--     NoImplicitPrelude
--     NumericUnderscores
--     PolyKinds
--     PostfixOperators
--     RankNTypes
--     ScopedTypeVariables
--     StandaloneDeriving
--     StandaloneKindSignatures
--     TupleSections
--     TypeApplications
--     TypeOperators
--     TypeSynonymInstances
--   ghc-options: -Wall -dynamic -rtsopts -threaded -main-is Driver
--   build-depends:
--       Glob
--     , HList
--     , HUnit
--     , QuickCheck
--     , base
--     , bytestring
--     , containers
--     , data-default
--     , directory
--     , errors
--     , exceptions
--     , fmt
--     , formatting
--     , generic-lens
--     , generic-random
--     , process
--     , quickcheck-instances
--     , random
--     , th-utilities
--     , refined
--     , relude
--     , tasty
--     , tasty-discover
--     , tasty-expected-failure
--     , tasty-hunit
--     , tasty-quickcheck
--     , template-haskell
--     , temporary
--     , text
--     , th-lift-instances
--     , th-process
--     , unix
--     , unliftio
--     , unordered-containers
--   default-language: Haskell2010
